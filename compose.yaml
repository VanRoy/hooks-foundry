services:
  postgres:
    image: 'postgres:17.2'
    environment:
      - 'POSTGRES_DB=hooks'
      - 'POSTGRES_PASSWORD=hooks'
      - 'POSTGRES_USER=hooks'
    ports:
      - '5432:5432'
  valkey:
    image: 'valkey/valkey:8.0.1'
    ports:
      - '6379'
    labels:
      org.springframework.boot.service-connection: redis
  kafka:
    image: 'apache/kafka-native:3.9.0'
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: OUTSIDE://kafka:9092,CONTROLLER://kafka:9093,INSIDE://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: OUTSIDE://localhost:9092,INSIDE://kafka:9094
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    labels:
      org.springframework.boot.service-connection: kafka
#  kafka-ui:
#    image: 'consdata/kouncil:latest'
#    ports:
#      - '80:8080'
#    environment:
#      bootstrapServers: 'kafka:9094'
#      kouncil.auth.active-provider: 'inmemory'
#    labels:
#      org.springframework.boot.readiness-check.disable: true
  wiremock:
    ports:
      - '8888:8080'
    image: 'wiremock/wiremock:3.10.0-1'
    entrypoint: ['/docker-entrypoint.sh', '--global-response-templating', '--disable-gzip', '--verbose']
